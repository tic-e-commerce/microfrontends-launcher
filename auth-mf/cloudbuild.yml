steps:
  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - -c
      - |
        docker build -t us-central1-docker.pkg.dev/main-stack-446713-e6/frontend-tic/auth-mf:${COMMIT_SHA} -f auth-mf/dockerfile.prod --platform=linux/amd64 --build-arg NEXT_PUBLIC_BACKEND_URL=http://34.8.180.215 .

  # Step 2: Push the Docker image to the registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/main-stack-446713-e6/frontend-tic/auth-mf:${COMMIT_SHA}",
      ]

  # # Paso 3: Instalar el plugin gke-gcloud-auth-plugin
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args: ["components", "install", "gke-gcloud-auth-plugin"]

  # # Paso 4: Autenticarse contra el cl√∫ster de Kubernetes
  # - name: "gcr.io/cloud-builders/gcloud"
  #   args:
  #     [
  #       "container",
  #       "clusters",
  #       "get-credentials",
  #       "tic-backend-gke",
  #       "--region",
  #       "southamerica-east1",
  #     ]

  # # Paso 5: Instalar Helm y ejecutar el comando Helm
  # - name: "gcr.io/cloud-builders/gcloud"
  #   entrypoint: "sh"
  #   args:
  #     [
  #       "-c",
  #       "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash && helm upgrade tic-backend ./k8s/tic-backend --install --timeout 15m --debug --atomic --set auth-mf.image.repository=us-central1-docker.pkg.dev/main-stack-446713-e6/frontend-tic/auth-mf,auth-mf.image.tag=${COMMIT_SHA} --namespace default",
  #     ]
options:
  logging: CLOUD_LOGGING_ONLY
